name: 'Get release note'

on:
  release:
    types: [published]

jobs:
  release_backend_with_frontend:
    if: contains(github.event.release.body, 'Common library changes ðŸŽŠ') && contains(github.ref, 'frontend_v')
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ github.workflow }}
      - run: echo ${{ github.triggering_actor }}
      - run: echo ${{ github.event_name }}
      - name: Checkout Repo Action
        uses: actions/checkout@v2
      - uses: octokit/request-action@v2.x
        id: get_latest_draft_release
        with:
            route: GET /repos/NielsBeeker/release_note_action_test/releases
        env:
            GITHUB_TOKEN: ${{ secrets.GIT_PAT }}
      - name: Extract release note id from GitHub RestApi
        id: get_release_note_id
        env:
          release_notes: ${{ steps.get_latest_draft_release.outputs.data }}
        run: |
          echo "release_note_id=$(echo $release_notes | jq '.[] | select((.tag_name | startswith("backend_v")) and (.draft==true)).id')" >> $GITHUB_OUTPUT
      - name: Publish release
        uses: StuYarrow/publish-release@v1.1.2
        env:
            GITHUB_TOKEN: ${{ secrets.GIT_PAT }}
        with:
            id: ${{ steps.get_release_note_id.outputs.release_note_id }}

  release_frontend_with_backend:
    if: contains(github.event.release.body, 'Common library changes ðŸŽŠ') && contains(github.ref, 'backend_v')
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ github.event_name }}
      - run: echo ${{ github.workflow }}
      - run: echo ${{ github.triggering_actor }}
      - name: Checkout Repo Action
        uses: actions/checkout@v2
      - uses: octokit/request-action@v2.x
        id: get_latest_draft_release
        with:
          route: GET /repos/NielsBeeker/release_note_action_test/releases
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_PAT }}
      - name: Extract release note id from GitHub RestApi
        id: get_release_note_id
        env:
          release_notes: ${{ steps.get_latest_draft_release.outputs.data }}
        run: |
          echo "release_note_id=$(echo $release_notes | jq '.[] | select((.tag_name | startswith("frontend_v")) and (.draft==true)).id')" >> $GITHUB_OUTPUT
      - name: Publish release
        uses: StuYarrow/publish-release@v1.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_PAT }}
        with:
          id: ${{ steps.get_release_note_id.outputs.release_note_id }}
